@using Ultra.Dal.Entities
@model Ultra.Dal.Entities.LoadRun[]

@{
	// TODO: get this from some configuration!
	var Warning = 2000;
	var Critical = 3000;
	var percentWarning = 1;
	var percentCritical = 2;

	Func<int, string> figureClass = x => {
		if (x < Warning) return "";
		if (x < Critical) return "warning";
		return "critical";
	};
	Func<double, string> figurePercentClass = x => {
		if (x < percentWarning) return "";
		if (x < percentCritical) return "warning";
		return "critical";
	};
}

<table id="load-runs-history" cellpadding="0" cellspacing="0">
	<tbody>
		<tr style="background-color: #f5f5f5">
			<th>Time</th>
			<th>PVS</th>
			<th>Duration</th>
			<th>RampUp</th>
			<th></th>
			<th></th>
		</tr>
		<tr class="running-load @(Model.Any(x => x.Status == LoadRunStatus.Pending) ? "" : "hidden")">
			<td colspan="6">
				<i>Currently running load...</i>
			</td>
		</tr>
		@foreach (var loadRun in Model.Where(x => x.Status == LoadRunStatus.Finished))
		{
			<tr data-loadrunid="@loadRun.Id" class="load-run">
				<td class="load-run">@loadRun.StartTime.ToShortDateString()</td>
				<td class="load-run">@loadRun.TotalPvs</td>
				<td class="load-run">@loadRun.Duration</td>
				<td class="load-run">@loadRun.RampUp</td>
				<td class="load-run"><a href="#">Details</a></td>
				<td class="load-run"><a href="#" class="delete">Delete</a></td>
			</tr>
			<tr class="load-run-details hidden">
				<td colspan="6">
					<table border="0" cellpadding="0" cellspacing="0" class="run-details">
						<tr>
							<td>Thread</td>
							<td class="value-title">Avg</td>
							<td class="value-title">p_90</td>
							<td class="value-title">%spk</td>
							<td class="value-title">%err</td>
						</tr>
						@if (loadRun.PageMetrics != null)
						{
							foreach (var threadGroup in loadRun.PageMetrics)
							{
								<tr>
									<td>@string.Format("{0:0.00}", threadGroup.PageName)</td>
									<td class="value @figureClass(threadGroup.AverageResponseTime)">@string.Format("{0:0.00}", threadGroup.AverageResponseTime)</td>
									<td class="value @figureClass(threadGroup.Percentile90)">@string.Format("{0:0.00}", threadGroup.Percentile90)</td>
									<td class="value @figurePercentClass(threadGroup.PercentOverThreshold)">@string.Format("{0:0.00}", threadGroup.PercentOverThreshold)</td>
									<td class="value @figurePercentClass(threadGroup.ErrorRate)">@string.Format("{0:0.00}", threadGroup.ErrorRate)</td>
								</tr>
							}
						}
					</table>
				</td>
			</tr>
		}
	</tbody>
</table>
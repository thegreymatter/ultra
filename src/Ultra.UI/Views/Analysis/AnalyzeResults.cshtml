@model Ultra.Services.JMeterOutput.RunResults

@{
	ViewBag.Title = "title";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Head
{
	<script type="text/javascript" src="https://www.google.com/jsapi"></script>
}

<h2>Load Analysis</h2>

<div id="distribution_pie" class="float"></div>
<div id="percentile_histogram" class="float"></div>

<script type="text/javascript">
	google.load('visualization', '1.0', {'packages':['corechart']});

	google.setOnLoadCallback(drawDistributionChart);
	google.setOnLoadCallback(drawPercentileHistogram);

	function drawDistributionChart() {
		var data = new google.visualization.DataTable();
		data.addColumn('string', 'Thread Group');
		data.addColumn('number', 'Requests Count');
		data.addRows([
		@for (int i=0; i<Model.Threads.Count(); i++)
		{
			@:['@Model.Threads[i].GetThreadPoolName()', @Model.Threads[i].GetRequestCount()]
			if (i < Model.Threads.Count()-1) { 
				@:, 
			}
		}
		]);

		var options = {'title':'Requests Distribution',
			'width':500,
			'height':400};

		var chart = new google.visualization.PieChart(document.getElementById('distribution_pie'));
		chart.draw(data, options);
	}
	
	function drawPercentileHistogram() {
		var data = google.visualization.arrayToDataTable([
			['Percentile', 'Time'],
			@for (int i=10; i<=90; i+=10) 
			{
				@:['P@i', @Model.Threads[0].GetPercentileX(i)]
				if (i < 100) { 
					@:, 
				}
			}
		]);

		var options = {
			title: 'Company Performance',
			vAxis: { title: 'Year', titleTextStyle: { color: 'red' } }
		};

		var chart = new google.visualization.BarChart(document.getElementById('percentile_histogram'));
		chart.draw(data, options);
	}
</script>
@model Ultra.Services.JMeterOutput.RunResults

@{
	ViewBag.Title = "title";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Head
{
	<script type="text/javascript" src="https://www.google.com/jsapi"></script>
}

<h2>Load Analysis</h2>

<script type="text/javascript">
	// Load the Visualization API and the piechart package.
	google.load('visualization', '1.0', {'packages':['corechart']});

	// Set a callback to run when the Google Visualization API is loaded.
	google.setOnLoadCallback(drawChart);

	// Callback that creates and populates a data table,
	// instantiates the pie chart, passes in the data and
	// draws it.
	function drawChart() {

		// Create the data table.
		var data = new google.visualization.DataTable();
		data.addColumn('string', 'Thread Group');
		data.addColumn('number', 'Requests Count');
		data.addRows([
		@for (int i=0; i<Model.Threads.Count(); i++)
		{
			@:['@Model.Threads[i].GetThreadPoolName()', @Model.Threads[i].GetRequestCount()]
			if (i < Model.Threads.Count()-1) { 
				@:, 
			}
		}
		]);

		// Set chart options
		var options = {'title':'Requests Distribution',
			'width':500,
			'height':400};

		// Instantiate and draw our chart, passing in some options.
		var chart = new google.visualization.PieChart(document.getElementById('distribution_pie'));
		chart.draw(data, options);
	}
</script>

<div id="distribution_pie"></div>